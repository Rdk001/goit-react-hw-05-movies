{"version":3,"file":"static/js/391.1774163a.chunk.js","mappings":"2PAGMA,EAAOC,EAAAA,GAAAA,GAAH,6IASJC,EAAOD,EAAAA,GAAAA,GAAH,wHAQJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4J,gKCXd,EATkB,SAAC,GAAsB,IAApBI,EAAmB,EAAnBA,aACnB,OACE,kBAAMC,SAAUD,EAAhB,WACE,kBAAOE,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,sBAGL,EC+DD,EAhEe,WACb,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAeJ,GAFlB,OAEVK,EAFU,OAGhBX,EAAUW,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBN,GATC,CAUF,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAGA,IAAMY,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAeb,GAFlB,OAEVc,EAFU,OAGhBX,EAAUW,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDASjBN,GAVC,CAWF,GAAE,CAACZ,IAYJ,OACE,iCACIA,IAAS,SAAC,EAAD,CAAWL,aAZL,SAAAwB,GACnBA,EAAEC,iBAEFnB,EAASkB,EAAEE,OAAOC,SAASb,MAAMT,OACjCM,EACY,KAAVN,EAAe,CAAC,EAAI,CAAES,MAAOU,EAAEE,OAAOC,SAASb,MAAMT,QAEvDmB,EAAEE,OAAOC,SAASb,MAAMT,MAAQ,EACjC,KAKG,SAAC,KAAD,UACGE,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAUC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMrB,GAAtC,SACGiB,KAFMC,EADD,QAUnB,C","sources":["components/Pages/Home.styled.jsx","components/SearchBox/SearchBox.jsx","components/Pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 5px;\n  list-style: none;\n  padding: 0px;\n`;\n\nconst Item = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  :hover {\n    background: orangered;\n  }\n`;\n\nconst LinkItem = styled(Link)`\n  display: block;\n  padding: 5px;\n  text-decoration: none;\n  color: #212121;\n  width: 100%;\n  :hover {\n    color: white;\n  }\n`;\nexport { List, Item, LinkItem };\n","const SearchBox = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\"></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieSearchApi } from 'components/Servise/MovieApi';\nimport { List, Item, LinkItem } from './Home.styled';\nimport SearchBox from 'components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const searchMovie = async () => {\n      try {\n        const data = await MovieSearchApi(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    searchMovie();\n  }, [query]);\n\n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n    const searchMovie = async () => {\n      try {\n        const data = await MovieSearchApi(value);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    searchMovie();\n  }, [value]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setValue(e.target.elements.query.value);\n    setSearchParams(\n      value !== '' ? {} : { query: e.target.elements.query.value }\n    );\n    e.target.elements.query.value = '';\n  };\n\n  return (\n    <>\n      {!value && <SearchBox handleSubmit={handleSubmit} />}\n      <List>\n        {movies.map(({ title, id }) => (\n          <Item key={id}>\n            <LinkItem to={`${id}`} state={{ from: location }}>\n              {title}\n            </LinkItem>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","LinkItem","Link","handleSubmit","onSubmit","type","name","useState","value","setValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","searchMovie","MovieSearchApi","data","results","console","log","message","e","preventDefault","target","elements","map","title","id","to","state","from"],"sourceRoot":""}